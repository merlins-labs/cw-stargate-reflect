/**
* This file was automatically generated by cosmwasm-typescript-gen@0.3.9.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/

import { CosmWasmClient, ExecuteResult, SigningCosmWasmClient } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
export interface InstantiateMsg {
  [k: string]: unknown;
}
export type QueryMsg = {
  query_stargate: {
    path: string;
    query_request: string;
    [k: string]: unknown;
  };
};
export interface QueryStargateResponse {
  value: string;
  [k: string]: unknown;
}
export interface CwStargateReflectReadOnlyInterface {
  contractAddress: string;
  queryStargate: ({
    path,
    queryRequest
  }: {
    path: string;
    queryRequest: string;
  }) => Promise<QueryStargateResponse>;
}
export class CwStargateReflectQueryClient implements CwStargateReflectReadOnlyInterface {
  client: CosmWasmClient;
  contractAddress: string;

  constructor(client: CosmWasmClient, contractAddress: string) {
    this.client = client;
    this.contractAddress = contractAddress;
    this.queryStargate = this.queryStargate.bind(this);
  }

  queryStargate = async ({
    path,
    queryRequest
  }: {
    path: string;
    queryRequest: string;
  }): Promise<QueryStargateResponse> => {
    return this.client.queryContractSmart(this.contractAddress, {
      query_stargate: {
        path,
        query_request: queryRequest
      }
    });
  };
}